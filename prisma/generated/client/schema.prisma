// schema.prisma

generator client {
    provider = "prisma-client-js"
    output   = "./generated/client"
}

datasource db {
    provider = "sqlite"
    url      = env("DATABASE_URL") // SQLite connection URL
}

// Definindo o modelo de usuário
model User {
    id       Int       @id @default(autoincrement())
    username String
    email    String    @unique
    password String
    status   Boolean
    orders   Order[]
    comments Comment[]
    Post     Post[]
    Task     Task[]
}

// Definindo o modelo de pedido
model Order {
    id          Int      @id @default(autoincrement())
    orderNumber String
    amount      Float
    dateCreated DateTime
    items       Int?
    status      Boolean
    user        User     @relation(fields: [userId], references: [id])
    userId      Int
}

// Definindo o modelo de comentário
model Comment {
    id          Int      @id @default(autoincrement())
    text        String
    dateCreated DateTime
    user        User     @relation(fields: [userId], references: [id])
    userId      Int
    // Adicione outros campos relevantes para os comentários
}

// Definindo o modelo de postagem
model Post {
    id          Int      @id @default(autoincrement())
    title       String
    content     String
    dateCreated DateTime
    user        User     @relation(fields: [userId], references: [id])
    userId      Int
    // Adicione outros campos relevantes para as postagens
}

// Definindo o modelo de tarefa
model Task {
    id          Int       @id @default(autoincrement())
    title       String
    description String
    status      Int
    user        User      @relation(fields: [userId], references: [id])
    userId      Int
    // Adicione outros campos relevantes para as tarefas
    Project     Project[]
}

model Project {
    id          Int      @id @default(autoincrement())
    title       String
    description String
    createdBy   Int
    dateCreated DateTime
    status      Boolean
    task        Task     @relation(fields: [tasks], references: [id])
    tasks       Int
}
